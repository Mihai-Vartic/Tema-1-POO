#include <iostream>

using namespace std;

class Vector
{
private:
    int n, *v;
   
public:
    Vector(int n, int x)    //constructor de initializare
    {
        this -> n = n;
        v = new int[n];
        for(int i = 0; i < n; i++)
            v[i] = x;
    }
   
    Vector(Vector &ob){};   //constructor de copiere
    
    int getN()
    {
        return n;
    }
    
    int suma()
    {
        int s = 0;
        for(int i = 0; i < getN(); i++)
            s = s + v[i];
        cout << s;
        cout << "\n";
    }
    
    int maxim()
    {
        int maxim = v[0], poz = 1;
        for(int i = 1; i < getN(); i++)
            if(v[i] > maxim)
            {
                maxim = v[i];
                poz = i+1;
            }
        cout << maxim;
        cout << "\n";
    }
    
    int sortare()
    {
        int min, aux, poz, j;
        for(int i = 0; i < getN()-1; i++)
        {
            min = v[i];
            poz = i;
            for(j = i+1; j < getN(); i++)
                if(v[j] < min)
                {
                    min = v[j];
                    poz = j;
                }
            if(poz != i)
            {
                aux = v[i];
                v[i] = min;
                v[poz] = aux;
            }
        }
    }
   
    int operator[](int i)
    {
        return v[i];
    }
   
    ~Vector()               //destructor
    {
        delete[] v;         
    }
};

int main()
{
    Vector v(3, 5);
    for(int i = 0; i < v.getN(); i++)
       cout<<v[i]<<' ';
    cout << "\n";
    v.suma();
    v.maxim();
    return 0;
}
